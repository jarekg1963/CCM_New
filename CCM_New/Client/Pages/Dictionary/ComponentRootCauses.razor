@page "/RootCausePage"
@using CCM_New.Shared;
@inject HttpClient Http
@using Syncfusion.Blazor.Grids;

<div class="alert alert-secondary" role="alert">
    <h3 class="h2Naglowek">Root Causes : @recno </h3>
</div>


@if (RootCusesListGrid.Count() == 0)
{
    <p>Loading....</p>
}
else
{
    <div id="containerGrid">
        <SfGrid Width="1200px" DataSource="@RootCusesListGrid" @ref="DefaultGrid" AllowSorting="true" AllowExcelExport="true" AllowPaging="true" AllowFiltering="true">
            <GridPageSettings PageSizes="true"></GridPageSettings>
            <GridColumns>
                <GridColumn Field=@nameof(TblRootCauses.RootCauseId) HeaderText="Id" TextAlign="TextAlign.Left" Width="40"></GridColumn>
                <GridColumn Field=@nameof(TblRootCauses.RootCauseName) HeaderText="Name" TextAlign="TextAlign.Left" Width="400"></GridColumn>
                <GridColumn Field=@nameof(TblRootCauses.ComplaintType) HeaderText="Address 1" Format="d" TextAlign="TextAlign.Left" Width="180"></GridColumn>
                <GridColumn Field=@nameof(TblRootCauses.Active) HeaderText="Address 2" TextAlign="TextAlign.Left" Width="180"></GridColumn>
                
            </GridColumns>
        </SfGrid>

    </div>
}

@code {
    public TblRootCauses[] RootCusesList = { };
    List<TblRootCauses> RootCusesListGrid = new List<TblRootCauses>();
    public string recno = "0";

    public SfGrid<TblRootCauses> DefaultGrid;

    async Task loadData()
    {
        string linktmp = "/api/TblRootCauses";
        RootCusesList = await Http.GetFromJsonAsync<TblRootCauses[]>(linktmp);
        RootCusesListGrid = new List<TblRootCauses>(RootCusesList);
        recno = RootCusesListGrid.Count().ToString();
    }
    protected override async Task OnInitializedAsync()
    {
        await loadData();
        StateHasChanged();
    }
}
