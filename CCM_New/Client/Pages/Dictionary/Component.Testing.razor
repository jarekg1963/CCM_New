@page "/ForTestingPurpose"
@using System.IO
@inject HttpClient http;

@using Syncfusion.Blazor.DropDowns;
@using CCM_New.Shared;

@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using CCM_New.Client.Tool; 

<button class="e-btn dlgbtn" @onclick="@ConfirmBtn">Confirm</button>

<SfDialog @bind-Visible="@ConfirmDlgVisible" Width="400px" Target="#target" ShowCloseIcon="true">
    <DialogTemplates>
        <Header>
            Delete Multiple Items
        </Header>
        <Content>
            Are you sure you want to permanently delete these items ?
        </Content>
    </DialogTemplates>
    <DialogEvents  Closed="@DialogClose"></DialogEvents>
    <DialogButtons>
        <DialogButton Content="Yes" IsPrimary="true" @onclick="() => Test(true)" />
        <DialogButton Content="No" @onclick="() => Test(false)" />
    </DialogButtons>
</SfDialog>

<hr />

<Confirm ConfirmationChanged="ConfirmDelete_Click" @ref="DeleteConfirmation"
         ConfirmationMessage="Are You sure delete ?"
         ConfirmationTitle="Warning"
         ></Confirm>


<Confirm ConfirmationChanged="ConfirmDelete_ClickDrugi" @ref="DeleteConfirmationDrugi"
         ConfirmationMessage="Are You sure delete ?"
         ConfirmationTitle="Warning"></Confirm>

<button class="e-btn dlgbtn" @onclick="@ConfirmBtnHin">ConfirmNowyBoot</button>

<button class="e-btn dlgbtn" @onclick="@ConfirmBtnHinDrugi">ConfirmNowyBoot</button>
<hr />



@code {

    protected ConfirmBase DeleteConfirmation { get; set; }
    protected ConfirmBase DeleteConfirmationDrugi { get; set; }

    private bool ConfirmDlgVisible { get; set; } = false;

    private void ConfirmBtnHin()
    {
        DeleteConfirmation.Show();
    }

    private void ConfirmBtnHinDrugi()
    {
        DeleteConfirmationDrugi.Show();
    }

    private void ConfirmDelete_Click(bool deleteConfirmed)
    {
        Console.WriteLine("KKKKKKKKlikniety " + deleteConfirmed);
    }


    private void ConfirmDelete_ClickDrugi(bool deleteConfirmed)
    {
        Console.WriteLine("KKKKKKKKlikniety drugi  " + deleteConfirmed);
    }

    private void ConfirmBtn()
    {
        this.ConfirmDlgVisible = true;
    }

    private void DialogClose(CloseEventArgs args)
    {

    }

    private void HideDialogTrue(Object e)
    {
        Console.WriteLine("TTTTTTTTTTTTT");
        this.ConfirmDlgVisible = false;
    }
    private void HideDialogFalse(Object e)
    {
        Console.WriteLine("FFFFFFFFFFFF");
        this.ConfirmDlgVisible = false;
    }

    public void Test(bool test)
    {
        Console.WriteLine(test);
        ConfirmDlgVisible = false;
    }

    public void DeleteRecord(bool test)
    {
        Console.WriteLine(test);
    }

}

    <style>
        .e-btn-hide {
            display: none;
        }

        .Table {
            border-collapse: separate;
            border-spacing: 10px;
            width: 85%;
            margin: 0px -5px 0px;
        }

        .dlgbtn {
            margin-right: 10px;
        }

        #target {
            height: 460px;
            min-height: 350px;
        }

        .dlgbtn {
            margin-right: 10px;
        }

        .fabric #target #prompt_dialog.e-dialog {
            height: 291px;
        }

        .material #target #prompt_dialog.e-dialog {
            height: 270px;
        }

        #target #prompt_dialog.e-dialog {
            height: 270px;
        }

        .bootstrap4 #target #prompt_dialog.e-dialog {
            height: 285px;
        }
    </style>
