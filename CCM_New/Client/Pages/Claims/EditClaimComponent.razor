@page "/EditClaimPage/{idCompain}";
@using Syncfusion.Blazor.Inputs;
@inject HttpClient Http;
@using CCM_New.Shared;
@using Newtonsoft.Json;
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Buttons;
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.DropDowns;
@using Syncfusion.Blazor.Popups;
@inject NavigationManager NavigationManager


<h5>Complain nr: @zComplaintIDUF</h5>



<div class="row">
    <div class="col-12">
        <SfAccordion @ref="AcrdnObj">
            <AccordionItems>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Documents  </div>
                    </HeaderTemplate>
                    <ContentTemplate>

                        <div class="row">
                            <div class="col-12">
                                <SfUploader ID="UploadFiles" SequentialUpload=true AutoUpload=false Multiple=true>
                                    <UploaderEvents ValueChange="OnChange1"></UploaderEvents>
                                </SfUploader>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <table class="paleBlueRows">
                                    <thead>
                                        <tr>
                                            <th>Delete</th>
                                            <th>Id </th>
                                            <th>Attached document</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var fasn in attachmentListForGrid)
                                        {
                                            <tr>

                                                <td>
                                                    <SfButton @onclick="() => DeleteItemfromTable(fasn)">Delete</SfButton>
                                                </td>
                                                <td> @fasn.UploadId</td>
                                                <td>
                                                    <a href="./api/download/file?fileName=@fasn.Location&idKatalog=@idCompain">@fasn.Filename </a>

                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </ContentTemplate>
                </AccordionItem>

                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Complain   </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <div class="row">
                            <div class="col-1">
                                <div class="row" style="height:25px">
                                    <label>Shipment</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Shipping point</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Sales or.</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Pl. deliv. date</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Act. GR date</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Cust.name</label>
                                </div>

                            </div>
                            <div class="col-2">
                                <div class="row" style="height:25px">
                                    <SfTextBox Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zShipping_Point" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zSalesOrganization" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfDatePicker @bind-Value="@zDeliveryDate" Readonly="true"></SfDatePicker>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfDatePicker @bind-Value="@zDeliveryDate" Readonly="true"></SfDatePicker>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zCustomerName" Readonly="true"></SfTextBox>
                                </div>

                            </div>
                            <div class="col-1" style="margin-left: 10px">
                                <div class="row" style="height:25px">
                                    <label>Complain id</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Contact name</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Contact Email</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Contact phone</label>
                                </div>

                                <div class="row" style="height:25px">
                                    <label>Comment</label>
                                </div>

                            </div>
                            <div class="col-2">
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@idCompain" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zCustomerContact" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zCustomerEmail" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zCustomerPhone" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zCustomerFax" Readonly="true"></SfTextBox>
                                </div>

                            </div>
                            <div class="col-1" style="margin-left: 10px">
                                <div class="row" style="height:25px">
                                    <label>Cust Sh. to</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Cust So. to</label>
                                </div>
                                <div class="row" style="height:25px">
                                    <label>Bill of lad.</label>
                                </div>
                            </div>
                            <div class="col-2">
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zShiptoCustomerNumber" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zSoldToCustomerNumber" Readonly="true"></SfTextBox>
                                </div>
                                <div class="row" style="height:25px">
                                    <SfTextBox @bind-Value="@zBillOfLading" Readonly="true"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top: 10px">
                            <div class="col-2">
                                <label>Reason code</label>
                            </div>
                            <div class="col-4">
                                <SfComboBox TValue="int" TItem="TblReasoncodes" Placeholder="Select reason code" DataSource="@comboReasonCodes" @bind-Value="zReasoncode">
                                    <ComboBoxEvents TValue="string" ValueChange="onChange"></ComboBoxEvents>
                                    <ComboBoxFieldSettings Value="ReasoncodeId" Text="ReasoncodeName"></ComboBoxFieldSettings>
                                </SfComboBox>
                            </div>
                            <div class="col-4">
                                <div class="multiline">
                                    <SfTextBox Multiline=true Placeholder="Complain description" @bind-Value="@zCustomerComments"></SfTextBox>
                                </div>
                            </div>
                        </div>
                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Complain details  </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <table class="paleBlueRows">
                            <thead>
                                <tr>

                                    <th>Line</th>
                                    <th>Material</th>
                                    <th>Description</th>
                                    <th>Ordered qty</th>
                                    <th>Complain qty</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var fasn in zmtblDeliveryLines)
                                {
                                    <tr>

                                        <td>@fasn.DeliveryLine</td>
                                        <td>@fasn.MaterialOrd11cn</td>
                                        <td>@fasn.MaterialOrdCtv</td>
                                        <td>@fasn.OrderQty</td>
                                        <td>
                                            <SfNumericTextBox @bind-Value="@fasn.ComplaintQty" Readonly="true"></SfNumericTextBox>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Sent LSP request  </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <div class="row">
                            <div class="col-2">
                                <label>Send to DC</label>
                            </div>
                            <div class="col-4">
                                <SfRadioButton Label="Yes" Name="options" Value="PodYes" @bind-Checked="stringChecked"></SfRadioButton>
                                <SfRadioButton Label="No" Name="options" Value="PodNo" @bind-Checked="stringChecked"></SfRadioButton>
                            </div>
                            <div class="col-2">
                                <label>Sent date</label>
                            </div>
                            <div class="col-2">
                                <SfTextBox Readonly="true"></SfTextBox>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-2">
                                <label>Remarks </label>
                            </div>
                            <div class="col-6">
                                <div class="multiline">
                                    <SfTextBox Multiline=true Placeholder="Remarks" @bind-Value="@zCustomer_Comments"></SfTextBox>
                                </div>
                            </div>
                        </div>


                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>LSP feedback  </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <div class="row">
                            <table class="paleBlueRows">
                                <thead>
                                    <tr>
                                        <td>Add</td>
                                        <th>Edit</th>
                                        <th>Delete</th>                         
                                        <th>Line</th>
                                        <th>Material</th>
                                        <th>Description</th>
                                        <th>Ordered qty</th>
                                        <th>Liability</th>
                                        <th>Rootcause</th>
                                        <th>Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var fasn in zmtblDeliveryLines)
                                    {
                                        <tr>
                                            <td>
                                                <SfButton OnClick="() => AddLspFeedBack(fasn)">Add</SfButton>
                                            </td>
                                            <td>
                                                <SfButton OnClick="() => EditLspFinalRootcause(fasn)">Edit</SfButton>
                                            </td>
                                            <td>
                                                <SfButton OnClick="() => DeleteFinalRootcause(fasn)">Delete </SfButton>
                                            </td>                                         
                                            <td>@fasn.DeliveryLine</td>
                                            <td>@fasn.MaterialOrd11cn</td>
                                            <td>@fasn.MaterialOrdCtv</td>
                                            <td>@fasn.OrderQty</td>
                                            <td>
                                                @if (fasn.Liable is null)
                                                {<p> - </p>}
                                                else
                                                { <label> @fasn.Liable.LiablePartyName </label>}
                                            </td>

                                            <td>
                                                @if (fasn.Rootca is null)
                                                {<p> - </p>}
                                                else
                                                { <label> @fasn.Rootca.RootCauseName </label>}
                                            </td>

                                            <td>
                                                <SfNumericTextBox @bind-Value="@fasn.ComplaintQty" Readonly="true"></SfNumericTextBox>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-9"></div>

                            <div class="col-1">
                                <SfButton OnClick="() => SaveTabeleLSPFeedback()">Save </SfButton>
                            </div>
                        </div>

                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Send POD request  </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <div class="row">
                            <div class="col-2">
                                <label>Carrier funl.</label>
                            </div>
                            <div class="col-3">
                                <SfTextBox @bind-Value="@zCarrier_Funloc" Readonly="true"></SfTextBox>
                            </div>
                            <div class="col-2">
                                <SfCheckBox Label="Send POD request" @onchange="onClickSendPODRequest" @bind-Checked="zsendPOD_Request"></SfCheckBox>
                            </div>
                            <div class="col-1">
                                <label>Comments</label>
                            </div>
                            <div class="col-4">
                                <div class="multiline">
                                    <SfTextBox Multiline=true Placeholder="Complain description" @bind-Value="@zCustomer_Comments"></SfTextBox>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top:10px">
                            <div class="col-2">
                                <label>Change carrier </label>
                            </div>
                            <div class="col-3">
                                <SfCheckBox Label="Carrier update" @onchange="unBlockCurrierUpdate" @bind-Checked="BlockedChangeCarrier"></SfCheckBox>

                                <SfComboBox TValue="string" TItem="TblCarriers" Placeholder="Select carrier" DataSource="@comboCarriers" @bind-Value="@zmWartoscPolaCombiCarrier" Readonly="@BlockedChangeCarrier">
                                    <ComboBoxEvents TValue="string" ValueChange="onChangeCarrier"></ComboBoxEvents>
                                    <ComboBoxFieldSettings Text="FullComboName" Value="Id"></ComboBoxFieldSettings>
                                </SfComboBox>

                            </div>
                            <div class="col-3">
                                <div class="row" style="margin-top: 20px">
                                    <SfTextBox @bind-Value="@zCarrier_Funloc" Readonly="true" Placeholder="Date sent"></SfTextBox>
                                </div>
                            </div>
                            <div class="col-2">

                            </div>
                            <div class="col-1">
                                <div class="row" style="margin-top: 20px">
                                    <SfButton>Save </SfButton>
                                </div>
                            </div>
                        </div>
                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>POD details feedback  </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <div class="row">
                            <div class="col-2">
                                POD received:
                            </div>
                            <div class="col-2">
                                <SfRadioButton Label="Yes" Name="options" Value="PodYes" @bind-Checked="stringChecked"></SfRadioButton>
                                <SfRadioButton Label="No" Name="options" Value="PodNo" @bind-Checked="stringChecked"></SfRadioButton>
                            </div>
                            <div class="col-2">
                                <label>Remarks</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-2">

                            </div>
                            <div class="col-2">
                                <SfDatePicker TValue="DateTime?" Value='@DateValue' Min='@MinDate' Max='@MaxDate'></SfDatePicker>
                            </div>
                            <div class="col-6">
                                <div class="multiline">
                                    <SfTextBox Multiline=true Placeholder="Complain description" @bind-Value="@zCustomer_Comments"></SfTextBox>
                                </div>
                            </div>
                        </div>

                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Final rootcause  </div>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <div class="row">
                            <table class="paleBlueRows">
                                <thead>
                                    <tr>
                                        <th>Edit</th>
                                        <th>Delete</th>
                                        <th>Line</th>
                                        <th>Material</th>
                                        <th>Description</th>
                                        <th>Ordered qty</th>
                                        <th>Complain qty</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var fasn in zmtblDeliveryLines)
                                    {
                                        <tr>
                                            <td>
                                                <SfButton OnClick="() => EditLspFinalRootcause(fasn)">Edit</SfButton>
                                            </td>
                                            <td>
                                                <SfButton OnClick="() => DeleteFinalRootcause(fasn)">Delete </SfButton>
                                            </td>
                                            <td>@fasn.DeliveryLine</td>
                                            <td>@fasn.MaterialOrd11cn</td>
                                            <td>@fasn.MaterialOrdCtv</td>
                                            <td>@fasn.OrderQty</td>
                                            <td>
                                                <SfNumericTextBox @bind-Value="@fasn.ComplaintQty" Readonly="true"></SfNumericTextBox>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-9"></div>

                            <div class="col-1">
                                <SfButton>Save </SfButton>
                            </div>
                        </div>
                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Logistic disclouse  </div>
                    </HeaderTemplate>
                    <ContentTemplate>

                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Recording info on CN towards NSO / DC  </div>
                    </HeaderTemplate>
                    <ContentTemplate>

                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Start recording task CN towards customer </div>
                    </HeaderTemplate>
                    <ContentTemplate>

                    </ContentTemplate>
                </AccordionItem>
                <AccordionItem Expanded="false">
                    <HeaderTemplate>
                        <div>Claims currier details  </div>
                    </HeaderTemplate>
                    <ContentTemplate>

                    </ContentTemplate>
                </AccordionItem>
            </AccordionItems>
        </SfAccordion>
    </div>
</div>


<SfDialog Width="800px" ShowCloseIcon="true" CloseOnEscape="true" @bind-Visible="@IsVisibleNewLineLSPFeedback">
    <DialogTemplates>
        <Header> Edit / New </Header>
        <Content>
            <div class="row">
                <div class="col-1">
                    <label>@zmDeliveryLine</label>
                </div>

                <div class="col-5">
                    <label>@zmMaterialOrd11cn</label>
                </div>
                <div class="col-5">
                    <label>@zmMaterialOrdCtv</label>
                </div>
                <div class="col-1">
                    <label>@zmComplaintQty</label>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-2">
                    <label>New quantity</label>
                </div>
                <div class="col-5">
                    <label>Root cause</label>
                </div>
                <div class="col-5">
                    <label>Liability</label>
                </div>
            </div>
            <div class="row">
                <div class="col-2">
                    <SfNumericTextBox @bind-Value="@zmQuatityForSplitedCoplain"></SfNumericTextBox>
                </div>
                <div class="col-5">
                    <SfComboBox TValue="int" TItem="TblRootCauses" Placeholder="Select rootcause" DataSource="@comboRootCause" @bind-Value="zReasoncode">
                        <ComboBoxEvents TValue="string" ValueChange="ComboRootCauseLSPFeedBack"></ComboBoxEvents>
                        <ComboBoxFieldSettings Value="RootCauseId" Text="RootCauseName"></ComboBoxFieldSettings>
                    </SfComboBox>
                </div>
                <div class="col-5">
                    <SfComboBox TValue="int" TItem="TblLiableParties" Placeholder="Select liable" DataSource="@comboTblParties" @bind-Value="zLiableParty">
                        <ComboBoxEvents TValue="string" ValueChange="ComboLiabilityLSPFeedBack"></ComboBoxEvents>
                        <ComboBoxFieldSettings Value="LiablePartyId" Text="LiablePartyName"></ComboBoxFieldSettings>
                    </SfComboBox>
                </div>
            </div>

        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="OK" IsPrimary="true" OnClick="@SaveLineLSPFeedback" />
        <DialogButton Content="Cancel" OnClick="@CloseDialogLine" />
    </DialogButtons>
</SfDialog>



@code {
    [Parameter]
    public string idCompain { get; set; }

    public int? zmIdCombiRootcauseLSPfeedback { get; set; }
    public int? zmIdCombiLSPLiabilityLSPFeedback { get; set; }
    public bool newLinLSPfeedback = false;

    public int zmDeliveryLine;
    public string zmMaterialOrd11cn;
    public string zmMaterialOrdCtv;
    public int zmOrderQty;
    public int zmComplaintQty;
    public int zmDeliveryLineId;
    public int zmComplaintID;
    public string zmDeliveryNumber;
    public DateTime zmActualGoodsIssueDate;
    public DateTime zmPlannedGoodsIssueDate;
    public string zmSalesOrder;
    public string zmSalesOrderLine;
    public decimal zmTotalComplaintValueCurrentCurrency;
    public string zmCurrencyComplaintValue;


    public bool IsVisibleNewLineLSPFeedback = false;

    public int zmQuatityForSplitedCoplain = 0;
    public int zmReasonCodeForSplitedComplain = 0;

    public bool zmDelindicator = true;
    public string zmWartoscPolaCombiCarrier;
    private string stringChecked = "Yes";
    public bool BlockedChangeCarrier = true;
    TblAttachments tblatt = new TblAttachments();
    TblComplaints complain = new TblComplaints();
    public string zComplaintIDUF;
    public string zShipping_Point;
    public string zSalesOrganization;
    public DateTime zDeliveryDate;
    public string zCustomerName;
    public string zShiptoCustomerNumber;
    public string zSoldToCustomerNumber;
    public string zBillOfLading;
    public string zCustomerContact;
    public string zCustomerEmail;
    public string zCustomerPhone;
    public string zCustomerFax;
    public string zCustomerComments;
    public int zReasoncode;
    public string zResonCodeName;
    public string zCarrier_Funloc;
    public string zCustomer_Comments;
    public bool? zsendPOD_Request;
    public int? zFinalRootcause;
    public int zLiableParty = 0;

    public string zCarrierID = "";

    public DateTime? DateValue { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 10);
    public DateTime MinDate { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 05);
    public DateTime MaxDate { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 27);


    // TblDeliveryLines newTblDeliveryLine = new TblDeliveryLines();


    public TblDeliveryLines[] deliveryLinesjson = { };
    List<TblDeliveryLines> zmtblDeliveryLines = new List<TblDeliveryLines>();


    public TblDeliveries[] tblDeliverieslist = { };

    public TblAttachments[] attachmentList = { };
    List<TblAttachments> attachmentListForGrid = new List<TblAttachments>();
    SfAccordion AcrdnObj;

    public TblReasoncodes[] comboReasonCodes = { };

    public TblRootCauses[] comboRootCause = { };
    public TblRootCauses[] comboRootCauseForSFP = { };

    public TblLiableParties[] comboTblParties = { };



    public TblCarriers[] comboCarriers = { };
    // List<TblCarriers> comboCarriersList = new List<TblCarriers>();

    public TblAsnData[] ASNList = { };
    List<TblAsnData> listASNForGrid = new List<TblAsnData>();

    public TblSapData[] DeliveryListSap = { };
    List<TblSapData> listDeliverySapForGrid = new List<TblSapData>();



    private async Task LoadData()
    {
        string linktmpAttach = "/api/TblAttachments/GetTblAttachmentsbyId/" + idCompain;
        attachmentList = await Http.GetFromJsonAsync<TblAttachments[]>(linktmpAttach);
        attachmentListForGrid = new List<TblAttachments>(attachmentList);





        string linkRC = "/api/TblReasoncodes/";
        comboReasonCodes = await Http.GetFromJsonAsync<TblReasoncodes[]>(linkRC);

        string linkRcu = "/api/TblRootCauses/";
        comboRootCause = await Http.GetFromJsonAsync<TblRootCauses[]>(linkRcu);

        string linkRp = "/api/TblLiableParties/";

        comboTblParties = await Http.GetFromJsonAsync<TblLiableParties[]>(linkRp);


        string linkCar = "/api/TblCarriers/";

        comboCarriers = await Http.GetFromJsonAsync<TblCarriers[]>(linkCar);
        // comboCarriersList = new List<TblCarriers>(comboCarriers);


        string linkDoComplineLine = "/api/TblDeliveryLines/GetTblDeliveryLinesByCid/" + idCompain;

        deliveryLinesjson = await Http.GetFromJsonAsync<TblDeliveryLines[]>(linkDoComplineLine);
        zmtblDeliveryLines = new List<TblDeliveryLines>(deliveryLinesjson);


        string linktmpComp = "/api/TblComplaints/" + idCompain;
        complain = await Http.GetFromJsonAsync<TblComplaints>(linktmpComp);


        zComplaintIDUF = complain.ComplaintIduf;
        zShipping_Point = complain.ShippingPoint;
        zSalesOrganization = complain.SalesOrganization;
        zDeliveryDate = complain.DeliveryDate;
        zCustomerName = "YYYYYYYYYYYYY";
        zShiptoCustomerNumber = complain.ShiptoCustomerNumber;
        zSoldToCustomerNumber = complain.SoldToCustomerNumber;
        zBillOfLading = complain.BillOfLading;
        zCustomerContact = complain.CustomerContact;
        zCustomerEmail = complain.CustomerEmail;
        zCustomerPhone = complain.CustomerPhone;
        zCustomerFax = complain.CustomerFax;
        zCustomerComments = complain.CustomerComments;
        zReasoncode = complain.Reasoncode;
        zCarrierID = complain.CarrierFunloc;
        zCarrier_Funloc = complain.CarrierFunloc;
        zsendPOD_Request = complain.SendPodRequest;


        Console.WriteLine("Cuuuuuuurier Id" + zCarrierID);

        // zResonCodeName = complain.ReasonCd.ReasoncodeName;


        Console.WriteLine("ilosc rekordow line" + zmtblDeliveryLines.Count.ToString());
        Console.WriteLine("Link do wywolania" + linkDoComplineLine);

    }

    //protected override async Task OnInitializedAsync()

    private async Task ReadDnAsNFromComplain()
    {
        string tmpDn;
        string strLinkforDNAsn = "/api/TblDeliveries/GetByComplainId/" + idCompain.ToString();
        tblDeliverieslist = await Http.GetFromJsonAsync<TblDeliveries[]>(strLinkforDNAsn);
        if (tblDeliverieslist.Length > 0)
        {
            tmpDn = tblDeliverieslist[0].DeliveryNumber;

            if (tmpDn.Substring(0, 1) == "1")
            {
                // Asn
                zmDelindicator = false;

                listASNForGrid = new List<TblAsnData>();


                string linktmpDnSAP = "/api/TblAsnDatas/GetTblAsnDatabyAsnNr/" + "0" + tmpDn.Trim();
                ASNList = await Http.GetFromJsonAsync<TblAsnData[]>(linktmpDnSAP);
                Console.WriteLine("Asn ilosc ------------------- " + ASNList.Count().ToString());
                listASNForGrid = new List<TblAsnData>(ASNList);

            }
            else
            {
                //DN

                zmDelindicator = true;


                string linktmpDnSAP = "api/TblSapDatas/GetByDn/" + "00" + tmpDn.Trim();
                DeliveryListSap = await Http.GetFromJsonAsync<TblSapData[]>(linktmpDnSAP);
                listDeliverySapForGrid = new List<TblSapData>(DeliveryListSap);

                Console.WriteLine("Ilosc rekordow DN SAp ---------------------:" + listDeliverySapForGrid.Count.ToString());
            }


        }





    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadData();

        //  await ReadDnAsNFromComplain();

        Console.WriteLine(" Iloas rekordow " + attachmentListForGrid.Count.ToString());
        StateHasChanged();
    }

    private async void OnChange1(UploadChangeEventArgs args)
    {
        string idpliku = idCompain;

        foreach (var f in args.Files)
        {
            Console.WriteLine($" Message z komponentu :  {f.FileInfo.Name}");
            var dane = f.Stream.ToArray();

            var DaneForupload = new UploadRequestClass { id = idpliku, file = dane, filename = f.FileInfo.Name };
            var rep = await this.Http.PostAsJsonAsync<UploadRequestClass>("api/upload/file", DaneForupload);
            var rep1 = await rep.Content.ReadAsStringAsync();


            // var result = JsonConvert.DeserializeObject<Class>(responseString);

            var jsonOb = JsonConvert.DeserializeObject<jsonPlik>(rep1);

            Console.WriteLine("Resposse z kontrolera " + jsonOb.responseMessage);

            // post do tabeli z plikami


            tblatt.ComplaintId = Convert.ToInt32(idCompain);
            tblatt.Filename = DaneForupload.filename;
            tblatt.Location = jsonOb.responseMessage;

            var r = await Http.PostAsJsonAsync<TblAttachments>("api/TblAttachments", tblatt);

            await LoadData();

        }
    }

    private async void DeleteItemfromTable(TblAttachments ff)
    {
        string linkKasowania = "api/TblAttachments/" + ff.UploadId.ToString();
        var d = await Http.DeleteAsync(linkKasowania);

        // skasowanie pliku z dysku

        string linkKasowaniazDysku = "/api/Delete/file?fileName=" + ff.Filename + "&idKatalog=" + idCompain;
        var dd = await Http.GetAsync(linkKasowaniazDysku);

        await LoadData();
        StateHasChanged();
    }


    public class UploadRequestClass
    {
        public string id { get; set; }
        public string filename { get; set; }
        public byte[] file { get; set; }
    }

    public class jsonPlik
    {
        public string responseMessage { get; set; }
    }

    private void onChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {

        //   saveComplain.Reasoncode = Convert.ToInt32(args.Value);
    }


    private void onChangeCarrier(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        Console.WriteLine("Combi currier " + args.Value);
        zCarrierID = args.Value;
        StateHasChanged();
    }


    private void DeleteItemfromTable(int zmDelLine)
    {
        Console.WriteLine("ilosc przed delete " + zmtblDeliveryLines.Count.ToString());
        zmtblDeliveryLines.RemoveAll(r => r.DeliveryLine == zmDelLine);
        // zmtblDeliveryLines.RemoveAt(2);
        Console.WriteLine("ilosc PO delete " + zmtblDeliveryLines.Count.ToString());
        StateHasChanged();
    }

    private void onClick()
    {
    }

    private void unBlockCurrierUpdate()
    {

    }

    private void onClickSendPODRequest()
    {
        // wyslanie mala do POD request
        // zapisanie do Tbl_compains
        BlockedChangeCarrier = false;

    }



    private void DeleteFinalRootcause(TblDeliveryLines tt)
    {
        zmtblDeliveryLines.Remove(tt);
        StateHasChanged();
    }

    private void CloseDialogLine()
    {

    }

    private async void SaveLineLSPFeedback()
    {

        TblDeliveryLines newTblDeliveryLine = new TblDeliveryLines();

        IsVisibleNewLineLSPFeedback = false;
        newTblDeliveryLine.DeliveryLine = 99;

        newTblDeliveryLine.ComplaintQty = zmQuatityForSplitedCoplain;
        newTblDeliveryLine.Rootcause = zmIdCombiRootcauseLSPfeedback;
        newTblDeliveryLine.LiableParty = zmIdCombiLSPLiabilityLSPFeedback;
        newTblDeliveryLine.DeliveryLine = zmDeliveryLine;
        newTblDeliveryLine.MaterialOrd11cn = zmMaterialOrd11cn;
        newTblDeliveryLine.MaterialOrdCtv = zmMaterialOrdCtv;
        newTblDeliveryLine.OrderQty = zmOrderQty;
        newTblDeliveryLine.DeliveryLineId = zmDeliveryLineId;
        newTblDeliveryLine.ComplaintId = Convert.ToInt32(idCompain);



        newTblDeliveryLine.DeliveryNumber = zmDeliveryNumber;
        newTblDeliveryLine.ActualGoodsIssueDate = zmActualGoodsIssueDate;
        newTblDeliveryLine.PlannedGoodsIssueDate = zmPlannedGoodsIssueDate;
        newTblDeliveryLine.SalesOrder = zmSalesOrder;
        newTblDeliveryLine.SalesOrderLine = zmSalesOrderLine;
        newTblDeliveryLine.TotalComplaintValueCurrentCurrency = zmTotalComplaintValueCurrentCurrency;
        newTblDeliveryLine.CurrencyComplaintValue = zmCurrencyComplaintValue;


        //---------------------------- rootcause Combi wyswietlanie w gridzie
        TblRootCauses rc = new TblRootCauses();
        string linkrc = "/api/TblRootCauses/" + zmIdCombiRootcauseLSPfeedback.ToString();
        rc = await Http.GetFromJsonAsync<TblRootCauses>(linkrc);
        newTblDeliveryLine.Rootca = rc;
        //---------------------------- Liability Combi wyswietlanie w gridzie

        TblLiableParties li = new TblLiableParties();
        string linkli = "api/TblLiableParties/" + zmIdCombiLSPLiabilityLSPFeedback.ToString();
        li = await Http.GetFromJsonAsync<TblLiableParties>(linkli);

        newTblDeliveryLine.Liable = li;
        //--------------------------------------------------



        zmtblDeliveryLines.Add(newTblDeliveryLine);

        Console.WriteLine(zmtblDeliveryLines.Count());


        newLinLSPfeedback = false;
        StateHasChanged();

    }

    private void EditLspFinalRootcause(TblDeliveryLines far)
    {


        IsVisibleNewLineLSPFeedback = true;

        zmDeliveryLineId = far.DeliveryLineId;
        zmDeliveryLine = far.DeliveryLine;
        zmMaterialOrd11cn = far.MaterialOrd11cn;
        zmMaterialOrdCtv = far.MaterialOrdCtv;
        zmOrderQty = far.OrderQty;




        zmDeliveryNumber = far.DeliveryNumber;
        zmActualGoodsIssueDate = far.ActualGoodsIssueDate;
        zmPlannedGoodsIssueDate = far.PlannedGoodsIssueDate;
        zmSalesOrder = far.SalesOrder;
        zmSalesOrderLine = far.SalesOrderLine;
        zmTotalComplaintValueCurrentCurrency = far.TotalComplaintValueCurrentCurrency;
        zmCurrencyComplaintValue = far.CurrencyComplaintValue;


        zmComplaintQty = far.ComplaintQty;

        zReasoncode = Convert.ToInt32(far.Rootcause);
        zmIdCombiRootcauseLSPfeedback = far.Rootcause;
        zmIdCombiLSPLiabilityLSPFeedback = far.LiableParty;


        zmtblDeliveryLines.Remove(far);



    }

    private void onChangeSplited(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        zFinalRootcause = Convert.ToInt32(args.Value);
    }

    private void onChangeLiable(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        zLiableParty = Convert.ToInt32(args.Value);
    }

    private void AddLspFeedBack(TblDeliveryLines fa)
    {

        IsVisibleNewLineLSPFeedback = true;
        zmDeliveryLine = fa.DeliveryLine;
        zmMaterialOrd11cn = fa.MaterialOrd11cn;
        zmMaterialOrdCtv = fa.MaterialOrdCtv;
        zmComplaintQty = fa.ComplaintQty;
        zmOrderQty = fa.OrderQty;
        zmDeliveryLineId = 0;


        zmDeliveryNumber = fa.DeliveryNumber;
        zmActualGoodsIssueDate = fa.ActualGoodsIssueDate;
        zmPlannedGoodsIssueDate = fa.PlannedGoodsIssueDate;
        zmSalesOrder = fa.SalesOrder;
        zmSalesOrderLine = fa.SalesOrderLine;
        zmTotalComplaintValueCurrentCurrency = fa.TotalComplaintValueCurrentCurrency;
        zmCurrencyComplaintValue = fa.CurrencyComplaintValue;

        zReasoncode = Convert.ToInt32(fa.Rootcause);
        zmIdCombiRootcauseLSPfeedback = fa.Rootcause;
        zmIdCombiLSPLiabilityLSPFeedback = fa.LiableParty;


    }

    private void ComboRootCauseLSPFeedBack(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        zmIdCombiRootcauseLSPfeedback = Convert.ToInt32(args.Value);
    }

    private void ComboLiabilityLSPFeedBack(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        zmIdCombiLSPLiabilityLSPFeedback = Convert.ToInt32(args.Value);
    }


    private async void SaveTabeleLSPFeedback()
    {

        foreach ( var zz in zmtblDeliveryLines)
        {
            if (zz.DeliveryLineId == 0)
            {
                // post
                zz.DeliveryLineId = 0;
                zz.Rootca = null;
                zz.Liable = null;

                string linkpost = "/api/TblDeliveryLines/";
                var response = await Http.PostAsJsonAsync<TblDeliveryLines>(linkpost, zz);

                Console.WriteLine("z POST do zapisu ID " + zz.DeliveryLineId);
                Console.WriteLine("z POST do zapisu Liable ID" + zz.LiableParty);
                Console.WriteLine("z POST do zapisu Ilosc " + zz.ComplaintQty);

            } else
            {
                // put


                string linkpost = "/api/TblDeliveryLines/" + zz.DeliveryLineId.ToString();
                var response = await Http.PutAsJsonAsync<TblDeliveryLines>(linkpost, zz);


                Console.WriteLine("z pentli do zapisu ID " + zz.DeliveryLineId);
                Console.WriteLine("z pentli do zapisu Liable ID" + zz.LiableParty);
                Console.WriteLine("z pentli do zapisu Ilosc " + zz.ComplaintQty);
            }

        }
    }
}


<style>
    table.paleBlueRows {
        font-family: "Times New Roman",Times,serif;
        border: 1px solid #FFFFFF;
        width: 100%;
        height: 100%;
        text-align: center;
        border-collapse: collapse;
    }

        table.paleBlueRows td, table.paleBlueRows th {
            border: 1px solid #FFFFFF;
            padding: 3px 2px;
        }

        table.paleBlueRows tbody td {
            font-size: 13px;
        }

        table.paleBlueRows tr:nth-child(even) {
            background: #D0E4F5;
        }

        table.paleBlueRows thead {
            background: #0B6FA4;
            border-bottom: 5px solid #FFFFFF;
        }

            table.paleBlueRows thead th {
                font-size: 17px;
                font-weight: bold;
                color: #FFFFFF;
                text-align: center;
                border-left: 2px solid #FFFFFF;
            }

                table.paleBlueRows thead th:first-child {
                    border-left: none;
                }

        table.paleBlueRows tfoot td {
            font-size: 14px;
        }
</style>
