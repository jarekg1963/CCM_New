@using CCM_New.Shared;
@inject HttpClient httpClient;
@using Syncfusion.Blazor.Notifications;
@inject LoginService loginService;


<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="margin-left:auto ; margin-right:auto">Password change</h5>
            </div>
            <div class="modal-body">
                <div id='input-container'>
                    <EditForm  Model="@NewUser">

                        <div class='form-group' style="margin-top:20px!important">
                            <div class="e-float-input e-input-group">
                                <input id="password" type="password" @bind="newPassword" required />
                                <span class="e-float-line"></span>
                                <label class="e-float-text">Password</label>
                            </div>
                            <div class="e-float-input e-input-group" style="margin-top:20px!important">
                                <input id="password" type="password" @bind="newPasswordVerification" required />
                                <span class="e-float-line"></span>
                                <label class="e-float-text">Repeat password </label>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(ErrorMessage))
                        {
                            <div class="alert alert-danger mt-3 mb-0">@ErrorMessage</div>
                        }
                    </EditForm>
                </div>
            </div>
            <div class="modal-footer" style="margin-top:0px!important">
                <button type="button" class="btn btn-primary" @onclick="() => SaveUserRequest()">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
            </div>
        </div>
    </div>
</div>

<SfToast @ref="ToastObj" Title="OK" Content="Password changed." CssClass="e-toast-success">
    <ToastPosition X="Right"></ToastPosition>
</SfToast>

@code {

    TblUsers NewUser = new TblUsers() { UserName = "", UserPassword = "", Remarks = "" };
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    public string newPassword = "";
    public string newPasswordVerification = "";
    public string passwordVrification = "";
    private string ErrorMessage { get; set; } = "";
    private string ErrorMessageCreate { get; set; } = "";
    public TblUsers[] UsersList = { };
    SfToast ToastObj;

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    async void SaveUserRequest()
    {
        if (newPasswordVerification == newPassword && newPassword != "")
        {
            int iid = loginService.session.user.Id;
            string linktmp = "/api/TblUsers/PutTblUsersPassChange/" + iid.ToString() + "?newPass=" + newPassword.Trim(); ;
            var response = await httpClient.PutAsJsonAsync<TblUsers>(linktmp, NewUser);
            await ToastObj.Show();
            Close();

        }
        else
        {
            ErrorMessage = "Passwords not the same or empty";
        }
    }



}
